{
  "V1/Configure OSIsoft Adapter for DNP3/Configure OSIsoft Adapter for DNP3.html": {
    "href": "V1/Configure OSIsoft Adapter for DNP3/Configure OSIsoft Adapter for DNP3.html",
    "title": "Configure OSIsoft Adapter for DNP3",
    "keywords": "Configure OSIsoft Adapter for DNP3"
  },
  "V1/Configure OSIsoft Adapter for DNP3/Configure data source.html": {
    "href": "V1/Configure OSIsoft Adapter for DNP3/Configure data source.html",
    "title": "Configure data source",
    "keywords": "Configure data source"
  },
  "V1/Configure OSIsoft Adapter for DNP3/Configure data selection.html": {
    "href": "V1/Configure OSIsoft Adapter for DNP3/Configure data selection.html",
    "title": "Configure data selection",
    "keywords": "Configure data selection"
  },
  "V1/Software requirements.html": {
    "href": "V1/Software requirements.html",
    "title": "Software requirements",
    "keywords": "Software requirements"
  },
  "V1/readme.html": {
    "href": "V1/readme.html",
    "title": "",
    "keywords": ""
  },
  "V1/Principles of operation.html": {
    "href": "V1/Principles of operation.html",
    "title": "Principles of operation",
    "keywords": "Principles of operation"
  },
  "V1/OSIsoft Adapter for DNP3 diagnostics.html": {
    "href": "V1/OSIsoft Adapter for DNP3 diagnostics.html",
    "title": "OSIsoft Adapter for DNP3 diagnostics",
    "keywords": "OSIsoft Adapter for DNP3 diagnostics"
  },
  "V1/index.html": {
    "href": "V1/index.html",
    "title": "OSIsoft Adapter for DNP3",
    "keywords": "OSIsoft Adapter for DNP3 ======= Introduction to OSIsoft Adapter for DNP3 OSIsoft Adapter for DNP3 operational overview Supported features Prepare for adapter installation Software requirements Hardware requirements Download OSIsoft Adapter Adapter security Install the adapter Uninstall the adapter Configure OSIsoft Adapter for DNP3 Configuration schemas Data source Data selection Logging Endpoint Configure data source Configure data selection Configure message logging Configure endpoints Data collection and connection Verify connection from data source to the adapter Verify data collection Start or stop the adapter Start or stop the data source Adapter administration Data buffering Adapter to OCS buffering Adapter to PI Server buffering Health Device status Next health message expected Diagnostics OSIsoft Adapter diagnostics OSIsoft Adapter for OPC UA diagnostics Troubleshooting Logging Data buffering"
  },
  "V1/main/V1/Troubleshooting/Logging.html": {
    "href": "V1/main/V1/Troubleshooting/Logging.html",
    "title": "Logging",
    "keywords": "Logging"
  },
  "V1/main/V1/Health/Device status.html": {
    "href": "V1/main/V1/Health/Device status.html",
    "title": "Device status",
    "keywords": "Device status"
  },
  "V1/main/V1/Configure the adapter/Egress_DataEndpoints_schema.html": {
    "href": "V1/main/V1/Configure the adapter/Egress_DataEndpoints_schema.html",
    "title": "Egress endpoint configuration schema",
    "keywords": "Egress endpoint configuration schema [{ \"endpoint\": \"https://<pi web api server>/piwebapi/omf/\", \"UserName\": \"<username>\", \"Password\": \"<password>\", \"buffering\": 0, \"maxBufferSizeMB\": 0 }, { \"Endpoint\": \"https://<OCS OMF endpoint>\", \"ClientId\": \"<clientid>\", \"ClientSecret\": \"<clientsecret>\", \"buffering\": 0, \"maxBufferSizeMB\": 0 } ] Abstract Extensible Status Identifiable Custom Properties Additional Properties Defined In Can be instantiated Yes Experimental No Forbidden Forbidden Egress_DataEndpoints_schema.json EgressEndpointConfiguration Properties Property Type Required Nullable Defined by Buffering reference Optional No EgressEndpointConfiguration (this schema) ClientId string Optional Yes EgressEndpointConfiguration (this schema) ClientSecret string Optional Yes EgressEndpointConfiguration (this schema) Endpoint string Required No EgressEndpointConfiguration (this schema) Id string Optional Yes EgressEndpointConfiguration (this schema) MaxBufferSizeMB integer Optional No EgressEndpointConfiguration (this schema) Password string Optional Yes EgressEndpointConfiguration (this schema) TokenEndpoint string Optional Yes EgressEndpointConfiguration (this schema) UserName string Optional Yes EgressEndpointConfiguration (this schema) ValidateEndpointCertificate boolean Optional No EgressEndpointConfiguration (this schema) Buffering Buffering is optional type: reference defined in this schema Buffering Type – #/definitions/BufferType ClientId ClientId is optional type: string defined in this schema ClientId Type string , nullable ClientSecret ClientSecret is optional type: string defined in this schema ClientSecret Type string , nullable Endpoint Endpoint is required type: string defined in this schema Endpoint Type string minimum length: 1 characters Id Id is optional type: string defined in this schema Id Type string , nullable MaxBufferSizeMB MaxBufferSizeMB is optional type: integer defined in this schema MaxBufferSizeMB Type integer Password Password is optional type: string defined in this schema Password Type string , nullable TokenEndpoint TokenEndpoint is optional type: string defined in this schema TokenEndpoint Type string , nullable UserName UserName is optional type: string defined in this schema UserName Type string , nullable ValidateEndpointCertificate ValidateEndpointCertificate is optional type: boolean defined in this schema ValidateEndpointCertificate Type boolean All of the following requirements need to be fulfilled. Requirement 1 object with following properties: Property Type Required Buffering reference Optional ClientId string Optional ClientSecret string Optional Endpoint string Required Id string Optional MaxBufferSizeMB integer Optional Password string Optional TokenEndpoint string Optional UserName string Optional ValidateEndpointCertificate boolean Optional Buffering Buffering is optional type: reference Buffering Type – #/definitions/BufferType ClientId ClientId is optional type: string ClientId Type string , nullable ClientSecret ClientSecret is optional type: string ClientSecret Type string , nullable Endpoint Endpoint is required type: string Endpoint Type string minimum length: 1 characters Id Id is optional type: string Id Type string , nullable MaxBufferSizeMB MaxBufferSizeMB is optional type: integer MaxBufferSizeMB Type integer Password Password is optional type: string Password Type string , nullable TokenEndpoint TokenEndpoint is optional type: string TokenEndpoint Type string , nullable UserName UserName is optional type: string UserName Type string , nullable ValidateEndpointCertificate ValidateEndpointCertificate is optional type: boolean ValidateEndpointCertificate Type boolean"
  },
  "V1/main/V1/Buffering/Buffering.html": {
    "href": "V1/main/V1/Buffering/Buffering.html",
    "title": "Overview",
    "keywords": "Overview"
  },
  "README.html": {
    "href": "README.html",
    "title": "OSIsoft Adapter DNP3 Docs",
    "keywords": "OSIsoft Adapter DNP3 Docs"
  },
  "V1/main/V1/Data buffering.html": {
    "href": "V1/main/V1/Data buffering.html",
    "title": "Data buffering",
    "keywords": "Data buffering"
  },
  "V1/Configure OSIsoft Adapter for DNP3/Data selection.html": {
    "href": "V1/Configure OSIsoft Adapter for DNP3/Data selection.html",
    "title": "Data selection",
    "keywords": "Data selection"
  },
  "V1/main/V1/Troubleshooting/Troubleshooting.html": {
    "href": "V1/main/V1/Troubleshooting/Troubleshooting.html",
    "title": "Troubleshooting",
    "keywords": "Troubleshooting"
  },
  "V1/main/V1/Troubleshooting/Data buffering.html": {
    "href": "V1/main/V1/Troubleshooting/Data buffering.html",
    "title": "Data buffering",
    "keywords": "Data buffering"
  },
  "V1/main/V1/Prepare for adapter installation/Software and hardware requirements.html": {
    "href": "V1/main/V1/Prepare for adapter installation/Software and hardware requirements.html",
    "title": "Software and hardware requirements",
    "keywords": "Software and hardware requirements"
  },
  "V1/main/V1/Prepare for adapter installation/Prepare for adapter installation.html": {
    "href": "V1/main/V1/Prepare for adapter installation/Prepare for adapter installation.html",
    "title": "Prepare for adapter installation",
    "keywords": "Prepare for adapter installation"
  },
  "V1/main/V1/Prepare for adapter installation/Download OSIsoft Adapter.html": {
    "href": "V1/main/V1/Prepare for adapter installation/Download OSIsoft Adapter.html",
    "title": "Download OSIsoft Adapter",
    "keywords": "Download OSIsoft Adapter"
  },
  "V1/main/V1/Install the adapter/Uninstall the adapter.html": {
    "href": "V1/main/V1/Install the adapter/Uninstall the adapter.html",
    "title": "Uninstall the adapter",
    "keywords": "Uninstall the adapter"
  },
  "V1/main/V1/Install the adapter/Install the adapter.html": {
    "href": "V1/main/V1/Install the adapter/Install the adapter.html",
    "title": "Install the adapter",
    "keywords": "Install the adapter Windows To install an OSIsoft adapter on Windows, complete the following steps: Download the Windows .msi file from the OSIsoft Customer portal , for example Modbus_win10-x64.msi . Open a command prompt. Change to the directory into which you downloaded the .msi file. Run Modbus_win10-x64.msi . Result: The OSIsoft adapter is installed on Windows and you can now configure it. Linux To install an OSIsoft adapter on Linux, complete the following steps: Download the appropriate Linux distribution file from the OSIsoft Customer portal , for example Modbus_linux-x64.deb . As a superuser, open a terminal. Install the OSIsoft adapter with the sudo apt install command. For example, to install the Linux ARM Debian package, run command. sudo apt install ./Modbus_linux-x64.deb . To install the Linux x64 package, run command sudo apt install ./Modbus_linux-arm.deb . Result: The OSIsoft adapter is installed on Linux and you can now configure it."
  },
  "V1/main/V1/Health/Next health message expected.html": {
    "href": "V1/main/V1/Health/Next health message expected.html",
    "title": "Next health message expected",
    "keywords": "Next health message expected"
  },
  "V1/main/V1/Health/Health.html": {
    "href": "V1/main/V1/Health/Health.html",
    "title": "Adapter Health",
    "keywords": "Adapter Health Adapters produce various types of health data. This information can be used to ensure that your adapters are running properly and data is flowing to the configured OSIsoft OMF endpoints. This section details how to configure your adapters so that this health data is produced and stored at a designated endpoint as well as what types of health data are available. Configure Health Endpoints A health endpoint designates an OSIsoft OMF endpoint where adapter health information should be sent. Multiple health endpoints can be configured. The configuration for a health endpoint is essentially the same as the configuration for a typical OMF egress endpoint. Table 1. Configuration parameters for adapter health endpoints Parameter Required Type Description Id Optional string Used to uniquely identify the endpoint. This can be any alphanumeric string. If left blank, a unique value is generated automatically. Endpoint Required string The URL of the OMF endpoint to receive this health data. ClientId Required for OCS endpoints string The Client Id used for authentication with an OSIsoft Cloud Services OMF endpoint. ClientSecret Required for OCS endpoints string The Client Secret used for authentication with an OSIsoft Cloud Services OMF endpoint. Username Required for PI Web API endpoints string The username used to authenticate with a PI Web API OMF endpoint. Password Required for PI Web API endpoints string The password used to authenticate with a PI Web API OMF endpoint. BufferingEnabled Optional bool Enables or disables buffering to this endpoint. By default, buffering is enabled (\"true\"). ValidateEndpointCertificate Optional bool Used to disable verification of destination security certificate. Use for testing only with self-signed certificates; OSIsoft recommends setting this to true in production environments. Defaults to true. Available Health Data Each individual adapter data component produces a few different pieces of health data. Dynamic data is sent every minute to configured health endpoints. Device Status The device status indicates the health of this component and whether or not it is currently communicating properly with the data source. This time-series data is stored within a PI point or OCS stream, depending on the endpoint type. During healthy steady-state operation, a value of \"Good\" is expected. Property Type Description Time string Timestamp of the event. DeviceStatus string The value of the DeviceStatus. The possible statuses are: Status Meaning Good The component is connected to the data source and collecting data. ConnectedNoData The component is connected to the data source but is not receiving data from it. AttemptingFailover The adapter is attempting to failover. Starting The component is currently in the process of starting up and is not yet connected to the data source. DeviceInError The component encountered an error either while connecting to the data source or attempting to collect data. Shutdown The component is either in the process of or has finished shutting down. Next Health Message Expected This property is similar to a heartbeat. A new value for NextHealthMessageExpected will be sent by an individual adapter data component on a periodic basis while it is functioning properly. This value will be a timestamp indicating when the next value should be received. When monitoring, if the next value is not received by the indicated time, this likely means an issue has arisen. This could be an issue with the adapter, adapter component, network connection between the health endpoint and the adapter, etc. Property Type Description Time string Timestamp of the event. NextHealthMessageExpected string Timestamp when next value is expected. Health Endpoint Differences - PI Web API vs. OSIsoft Cloud Services As noted above, currently two different OMF endpoints are supported for adapter health data - That hosted by PI Web API and that hosted by OSIsoft Cloud Services. There are a few differences in how these two systems treat the associated health data. PI Web API parses the information and sends it configured PI Systems for the OMF endpoint. The static data is used to create a hierarchy on a PI AF server similar to the following: The dynamic health data is actually time-series data that is stored in PI points on a PI Data Archive and can be seen in the AF hierarchy as PI Point Data Reference attributes. OSIsoft Cloud Services currently does not have a way to store the static metadata. For OCS-based adapter health endpoints, only the dynamic data will be stored. Each value will be its own stream with the timestamp property as the single index."
  },
  "V1/main/V1/Configure the adapter/Configure message logging.html": {
    "href": "V1/main/V1/Configure the adapter/Configure message logging.html",
    "title": "Configure message logging",
    "keywords": "Configure message logging"
  },
  "V1/main/V1/Configure the adapter/Configure endpoints.html": {
    "href": "V1/main/V1/Configure the adapter/Configure endpoints.html",
    "title": "Configure endpoints",
    "keywords": "Configure endpoints Adapters can egress dynamic data to destinations that you supply through OMF. Supported destinations are OSIsoft Cloud Services and PI servers through PI Web API. An egress endpoint represents a destination to which data will be sent. You can specify multiple endpoints. Every egress endpoint is executed independently of all other egress endpoints and is expected to accept OMF messages. An egress endpoint is comprised of the properties specified under Parameters . Note: Some types, and consequently containers and data, cannot be egressed. For more information, see Egress Execution Details . Configuration procedure Note: You cannot add egress configurations manually because some parameters are encrypted when stored to disk. You must use the REST endpoints to add or edit egress configuration. For additional endpoints, see REST URLs . Complete the following to create new egress endpoints: Using any text editor, create a file that contains one or more egress endpoints in JSON form. For content structure, see Examples . For a table of all available egress parameters, see Parameters . Save the file. Use any tool capable of making HTTP requests and execute a POST command with the contents of that file to the following endpoint: http://localhost:5590/api/v1/configuration/Egress/dataendpoints/ Example using cURL: Add endpoints curl -v -d \"@Egress_DataEndpoints.config.json\" -H \"Content-Type: application/json\" -X POST \"http://localhost:5590/api/v1/configuration/Egress/dataendpoints\" curl -v -d \"@Egress_DataEndpoints.config.json\" -H \"Content-Type: application/json\" -X PUT \"http://localhost:5590/api/v1/configuration/Egress/dataendpoints\" Delete an endpoint curl -v -X DELETE \"http://localhost:5590/api/v1/configuration/Egress/dataendpoints/{id}\" Update an endpoint curl -v -d \"@Egress_DataEndpoint.config.json\" -H \"Content-Type: application/json\" -X UPDATE \"http://localhost:5590/api/v1/configuration/Egress/dataendpoints/{id}\" View endpoints curl -v -X GET \"http://localhost:5590/api/v1/configuration/Egress/DataEndpoints\" Parameters Parameter Required Type Description Id Required string Unique identifier Endpoint Required string Destination that accepts OMF v1.1 messages. Supported destinations include OCS and PI server. ClientId Required for OCS endpoint string Authentication with the OCS OMF endpoint. ClientSecret Required for OCS endpoint string Authentication with the OCS OMF endpoint. TokenEndpoint Optional for OCS endpoint string Retrieves an OCS token from an alternative endpoint. Username Required for PI endpoint string Basic authentication to the PI Web API OMF endpoint. Password Required for PI endpoint string Basic authentication to the PI Web API OMF endpoint. ValidateEndpointCertificate Optional boolean Disables verification of destination certificate. Use for testing only with self-signed certificates. Defaults to true. Examples The following examples are valid egress configurations. Egress data to OCS [{ \"Id\": \"OCS\", \"Endpoint\" : \" https://{IP/FQDN of OCS}/api/Tenants/{tenantId}/Namespaces/{namespaceId}/omf\", \"ClientId\" : \"{clientId}\", \"ClientSecret\" : \"{clientSecret}\" }] Egress data to PI Web API. [{ \"Id\": \"PI WebAPI\", \"Endpoint\" : \" https://{IP/FQDN of WebApi}/piwebapi/omf\", \"userName\" : \"{username}\", \"Password\" : \"{password}\" }] REST URLs Relative URL HTTP verb Action api/v1/configuration/egress/DataEndpoints GET Gets all configured egress endpoints api/v1/configuration/egress/DataEndpoints DELETE Deletes all configured egress endpoints api/v1/configuration/egress/DataEndpoints POST Adds an array of egress endpoints or a single endpoint. Fails if any endpoint already exists api/v1/configuration/egress/DataEndpoints PUT Replaces all egress endpoints api/v1/configuration/egress/DataEndpoints/{id} GET Gets configured endpoint by id api/v1/configuration/egress/DataEndpoints/{id} DELETE Deletes configured endpoint by id api/v1/configuration/egress/DataEndpoints/{id} PUT Replaces egress endpoint by id . Fails if endpoint doesn't exist api/v1/configuration/egress/DataEndpoints/{id} PATCH Allows partial updating of configured endpoint by id Egress execution details After you add configuration for an egress endpoint, egress will be executed immediately for that endpoint. Egress is handled individually per configured endpoint. On first execution, types and containers will be egressed. After that only new or changed types or containers will be egressed. Type creation must be successful in order to create containers. Container creation must be successful in order to egress data. If an egress endpoint is removed, data flow will immediately end for that endpoint. Any buffered data for the endpoint that has been deleted will be permanently lost. Type, container, and data items are batched into one or more OMF messages when egressing. As per the requirements defined in OMF, a single message payload will not exceed 192KB in size. Compression is automatically applied to outbound egress messages. On the destination, failure to add a single item will result in the message failing. Types, containers, and data will continue to be egressed as long as the destination continues to respond to HTTP requests - retrying previous failures as needed."
  },
  "V1/main/V1/AdapterDeletion/DeleteAdapter.html": {
    "href": "V1/main/V1/AdapterDeletion/DeleteAdapter.html",
    "title": "Delete an Adapter",
    "keywords": "Delete an Adapter An adapter instance can be removed by making a DELETE call with either a REST client or the EdgeCmd utility. When an adapter instance is removed, the configuration and log files are saved into a sub-directory in case they are needed later. Any associated types, streams, and data will remain on respective endpoints. File Relocation All configuration and log files will be renamed and moved to a folder called \"Removed\" within the respective directory. Configuration files will be moved to .\\Configuration\\Removed; logs files to .\\Logs\\Removed. The files are renamed according to the timestamp of removal, e.g. FileName.json_removed_yyyy-MM-dd--hh-mm-ss. In the following example, one Modbus Adapter service is installed on a particular Windows node with the name \"ModbusService1\". A Modbus component with the name \"ModbusDeviceX\" was added and configured to this Modbus adapter and later removed. Similar behavior will be seen on Linux. This is the resulting relocation and renaming scheme after deletion: REST Command: DELETE An empty DELETE command must be made against the Id of the component to be deleted. Using cURL: curl -v -X DELETE \"http://localhost:5595/api/v1/configuration/system/components/ComponentIdToBeDeleted\" REST URLs Relative URL HTTP verb Action api/v1/configuration/system/components/{id} DELETE Deletes specified component"
  },
  "V1/main/V1/Supported features.html": {
    "href": "V1/main/V1/Supported features.html",
    "title": "Supported features",
    "keywords": "Supported features"
  },
  "V1/main/V1/readme.html": {
    "href": "V1/main/V1/readme.html",
    "title": "",
    "keywords": ""
  },
  "V1/main/V1/OSIsoft Adapter diagnostics.html": {
    "href": "V1/main/V1/OSIsoft Adapter diagnostics.html",
    "title": "OSIsoft Adapter diagnostics",
    "keywords": "OSIsoft Adapter diagnostics"
  },
  "V1/main/test.html": {
    "href": "V1/main/test.html",
    "title": "",
    "keywords": ""
  },
  "V1/main/README.html": {
    "href": "V1/main/README.html",
    "title": "OSIsoft Adapter Docs",
    "keywords": "OSIsoft Adapter Docs"
  },
  "V1/Introduction to OSIsoft Adapter for DNP3/Supported features.html": {
    "href": "V1/Introduction to OSIsoft Adapter for DNP3/Supported features.html",
    "title": "Supported Features",
    "keywords": "Supported Features"
  },
  "V1/Introduction to OSIsoft Adapter for DNP3/OSIsoft Adapter for DNP3 operational overview.html": {
    "href": "V1/Introduction to OSIsoft Adapter for DNP3/OSIsoft Adapter for DNP3 operational overview.html",
    "title": "OSIsoft Adapter for DNP3 operational overview",
    "keywords": "OSIsoft Adapter for DNP3 operational overview"
  },
  "V1/Introduction to OSIsoft Adapter for DNP3/Introduction to OSIsoft Adapter for DNP3.html": {
    "href": "V1/Introduction to OSIsoft Adapter for DNP3/Introduction to OSIsoft Adapter for DNP3.html",
    "title": "Introduction to OSIsoft Adapter for DNP3",
    "keywords": "Introduction to OSIsoft Adapter for DNP3"
  },
  "V1/Configure OSIsoft Adapter for DNP3/Data source.html": {
    "href": "V1/Configure OSIsoft Adapter for DNP3/Data source.html",
    "title": "Data source",
    "keywords": "Data source"
  }
}